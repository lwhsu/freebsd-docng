<?xml version="1.0" encoding="koi8-r"?>
<!--
     The FreeBSD Russian Documentation Project

     $FreeBSD$

     Original revision: r43840
-->

<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
  xml:id="slow-porting">

  <title>Медленное портирование</title>

  <para>Итак, все оказалось не так уж и просто, и порт потребовал
    некоторых модификаций для того, чтобы заставить его работать.  В
    этом разделе мы расскажем, шаг за шагом, как его модифицировать,
    чтобы он работал с нашей системой портов.</para>

  <sect1 xml:id="slow-work">
    <title>Как всё это работает</title>

    <para>Во-первых, когда пользователь дает в своем каталоге с
      портом команду <command>make</command>, происходит целая череда
      событий.  Во время чтения этого текста может оказаться полезным
      иметь файл <filename>bsd.port.mk</filename> открытым в другом
      окне, что сильно поможет в их понимании.</para>

    <para>Но не волнуйтесь сильно, если вы не до конца понимаете, что
      делается в <filename>bsd.port.mk</filename>, не так уж много
      людей его понимает... <emphasis>:-&gt;</emphasis></para>

    <procedure>
      <step>
	<para>Запускается цель <buildtarget>fetch</buildtarget>.
	  Цель <buildtarget>fetch</buildtarget> отвечает за то, что
	  архив исходных текстов имеется в наличии локально в
	  каталоге <varname>DISTDIR</varname>.  Если цель
	  <buildtarget>fetch</buildtarget> не может найти требуемые
	  файлы в каталоге <varname>DISTDIR</varname>, то они будут
	  искаться по указателю URL <varname>MASTER_SITES</varname>,
	  который устанавливается в Makefile, а также на наших FTP
	  зеркалах, куда мы по возможности помещаем дистрибутивные
	  файлы для архива.  Затем она попытается сгрузить указанный
	  файл с помощью <varname>FETCH</varname>, полагая, что
	  запрашивающая машина имеет прямое подключение к Интернет.
	  Если файл скачается удачно, то он будет помещен в каталог
	  <varname>DISTDIR</varname> для последующего использования и
	  обработки.</para>
      </step>

      <step>
	<para>Выполняется цель <buildtarget>extract</buildtarget>.
	  Она ищет дистрибутивный файл порта (как правило, tar-архив
	  <command>gzip</command>) в каталоге
	  <varname>DISTDIR</varname> и распаковывает его во временный
	  каталог, задаваемый переменной <varname>WRKDIR</varname>
	  (по умолчанию <filename>work</filename>).</para>
      </step>

      <step>
	<para>Выполняется цель <buildtarget>patch</buildtarget>.
	  Во-первых, применяются все патчи, заданные переменной
	  <varname>PATCHFILES</varname>.  Во-вторых, если какие-либо
	  файлы с патчами, носящие имена
	  <filename>patch-*</filename>, имеются в подкаталоге
	  <varname>PATCHDIR</varname> (по умолчанию это каталог
	  <filename>files</filename>), то они применяются в этот
	  момент в алфавитном порядке.</para>
      </step>

      <step>
	<para>Запускается цель <buildtarget>configure</buildtarget>.
	  Здесь может выполняться любая из многих различных
	  вещей.</para>

	<orderedlist>
	  <listitem>
	    <para>Если существует скрипт
	      <filename>scripts/configure</filename>, то он
	      запускается.</para>
	  </listitem>

	  <listitem>
	    <para>Если задана переменная
	      <varname>HAS_CONFIGURE</varname> или
	      <varname>GNU_CONFIGURE</varname>, то запускается скрипт
	      <filename>WRKSRC/configure</filename>.</para>
	  </listitem>
	</orderedlist>
      </step>

      <step>
	<para>Выполняется цель <buildtarget>build</buildtarget>.  Она
	  отвечает за переход в собственный рабочий каталог порта
	  (<varname>WRKSRC</varname>) и его построение.</para>
      </step>

      <step>
	<para>Выполняется цель <buildtarget>stage</buildtarget>.
	  Конечный набор построенных файлов помещается во временный
	  каталог (<varname>STAGEDIR</varname>, смотрите <xref
	    linkend="staging"/>).  Иерархия этого каталога отражает
	  иерархию каталогов системы, в которую данный пакет будет
	  устанавливаться.</para>
      </step>

      <step>
	<para>Выполняется цель <buildtarget>install</buildtarget>.
	  В систему копируются файлы, перечисленные в pkg-plist
	  порта.</para>
      </step>
    </procedure>

    <para>Выше перечислены стандартные действия.  Кроме того, вы сами
      можете определить цели
      <buildtarget>pre-<replaceable>что-то</replaceable></buildtarget>
      или
      <buildtarget>post-<replaceable>что-то</replaceable></buildtarget>,
      или создать скрипты с такими именами в подкаталоге
      <filename>scripts</filename>, и они будут запущены до или после
      выполнения действий по умолчанию.</para>

    <para>Например, если у вас есть цель
      <buildtarget>post-extract</buildtarget>, определённая в вашем
      файле <filename>Makefile</filename> и файл
      <filename>pre-build</filename> в подкаталоге
      <filename>scripts</filename>, то после выполнения обычных
      действий по распаковке, будет вызвана цель
      <buildtarget>post-extract</buildtarget> а скрипт
      <filename>pre-build</filename> будет выполнен перед запуском
      стандартных правил построения.  Рекомендуется использовать цели
      из <filename>Makefile</filename>, если действия достаточно
      просты, потому что в дальнейшем будет проще определить, какие
      нестандартные действия требует порт.</para>

    <para>Действия по умолчанию выполняются целями
      <buildtarget>do-<replaceable>что-то</replaceable></buildtarget>
      из <filename>bsd.port.mk</filename>.  Например, команды для
      распаковки порта находятся в цели
      <buildtarget>do-extract</buildtarget>.  Если вам не хватает
      цели по умолчанию, вы можете ее исправить, переопределив цель
      <buildtarget>do-<replaceable>something</replaceable></buildtarget>
      в вашем файле <filename>Makefile</filename>.</para>

    <note>
      <para><quote>Основные</quote> цели (к примеру,
	<buildtarget>extract</buildtarget>,
	<buildtarget>configure</buildtarget> и так далее) не делают
	ничего больше, чем проверяют успешность завершения всех
	предыдущих шагов и вызывают настоящие цели или скрипты, и их
	не нужно менять.  Если вам нужно изменить распаковку,
	исправляйте <buildtarget>do-extract</buildtarget>, но никогда
	не меняйте способ работы <buildtarget>extract</buildtarget>!
	Кроме того, цель <buildtarget>post-deinstall</buildtarget>
	является недействительной и не выполняется инфраструктурой
	портов.</para>
    </note>

    <para>Теперь, когда вы представляете, что происходит, когда
      пользователь набирает команду <command>make install</command>,
      давайте пройдемся через шаги, рекомендуемые для создания
      настоящего порта.</para>
  </sect1>

  <sect1 xml:id="slow-sources">
    <title>Получение исходного кода</title>

    <para>Получите оригинальные исходные тексты (обычно) в виде
      упакованного tar-архива (<filename>foo.tar.gz</filename> или
      <filename>foo.tar.bz2</filename>) и скопируйте его в каталог
      <varname>DISTDIR</varname>.  Всегда используйте исходные тексты
      <emphasis>основной ветки разработки</emphasis> везде, где это
      возможно.</para>

    <para>Вам потребуется задать значение переменной
      <varname>MASTER_SITES</varname> так, чтобы оно указывало на
      местоположение оригинального tar-архива.  В файле
      <filename>bsd.sites.mk</filename> вы найдёте краткие
      обозначения для большинства популярных сайтов.  Пожалуйста,
      используйте эти сайты&mdash;и соответствующие
      определения&mdash;везде, где это возможно, чтобы избежать
      проблем повторения одной и той же информации в базе источников.
      Так как эти сайты со временем меняются, для всех причастных
      поддержка становится настоящим кошмаром.</para>

    <para>Если вы не можете найти FTP/HTTP сайт с хорошим
      подключением к сети, или находите только сайты, которые имеют
      раздражающе нестандартные форматы, то можете захотеть поместить
      копию на надежный сервер FTP или HTTP, который вам доступен
      (например, ваша домашняя страница).</para>

    <para>Если вы не можете найти доступного и надёжного места для
      помещения дистрибутивного файла, то мы сами сможем разместить
      его на сервере <systemitem>ftp.FreeBSD.org</systemitem>; однако
      это наименее рекомендуемое решение.  Дистрибутивный файл должен
      быть помещён в каталог <filename>~/public_distfiles/</filename>
      одного из пользователей машины
      <systemitem>freefall</systemitem>.  Попросите того, кто
      коммиттил ваш порт, сделать это.  Этот человек также задаст
      переменной <varname>MASTER_SITES</varname> значение
      <varname>MASTER_SITE_LOCAL</varname>, а в переменной
      <varname>MASTER_SITE_SUBDIR</varname> укажет своё имя
      пользователя с машины <systemitem>freefall</systemitem>.</para>

    <para>Если дистрибутивные файлы вашего порта постоянно меняются
      по неизвестным причинам без изменения версий со стороны автора,
      остаётся только поместить дистрибутив на вашу домашнюю
      Web-страницу и указать её первой в списке
      <varname>MASTER_SITES</varname>.  Если можете, попытайтесь
      договориться с автором порта об этом; это действительно
      помогает в достижении некоторого управления исходным кодом.
      Размещение собственной версии поможет избежать появления ошибок
      у пользователей типа <errorname>checksum mismatch</errorname>,
      а также уменьшит нагрузку на людей, сопровождающих наш
      FTP-сервер.  Также, если у порта имеется только один основной
      сервер, то рекомендуется поместить архивную копию на свой сайт
      и указать его в списке <varname>MASTER_SITES</varname>
      вторым.</para>

    <para>Если вашему порту требуются дополнительные `патчи',
      доступные в Интернет, скачайте также и их, поместив в каталог
      <varname>DISTDIR</varname>.  Не волнуйтесь, если они находятся
      не на том же сайте, откуда взят дистрибутивный архив, мы умеем
      обрабатывать такие ситуации (смотрите описание <link
	linkend="porting-patchfiles">PATCHFILES</link> ниже).</para>
  </sect1>

  <sect1 xml:id="slow-modifying">
    <title>Модификация порта</title>

    <para>Распакуйте копию дистрибутивного файла в отдельный каталог
      и внесите изменения, которые необходимы для того, чтобы порт
      компилировался нормально в текущей версии &os;.
      <emphasis>Тщательно отслеживайте</emphasis> все, что вы
      делаете, этот процесс вам предстоит автоматизировать.  Все,
      включая удаление, добавление или модификацию в файлах должны
      будут выполняться автоматически с помощью скриптов или файлов
      патчей, когда вы завершите работу над портом.</para>

    <para>Если вашему порту во время компиляции, установки и
      настройки требуется довольно много взаимодействовать с
      пользователем, то посмотрите на один из классических скриптов
      <application>Configure</application> Лэрри Уолла (Larry Wall) и
      сделайте сами что-либо подобное.  Предназначение новой
      коллекции портов - это сделать каждое приложение в стиле
      <quote>plug-and-play</quote> настолько, насколько это вообще
      возможно для конечного пользователя при минимальном
      использовании дискового пространства.</para>

    <note>
      <para>Если явно не указано обратное, то патчи, скрипты и другие
	файлы, которые вы создали и предоставили для Коллекции Портов
	&os;, неявно подпадают под стандартные условия лицензии
	BSD.</para>
    </note>
  </sect1>

  <sect1 xml:id="slow-patch">
    <title>Создание патчей</title>

    <para>Файлы, которые добавлялись или изменялись в процессе
      создания порта, могут быть выявлены программой &man.diff.1;, а
      результат работы этой программы может быть в дальнейшем передан
      программе &man.patch.1;.  Такое действие с обычным файлом
      подразумевает сохранение копии файла с первоначальным
      содержимым перед внесением каких-либо изменений.</para>

    <screen>&prompt.user; <userinput>cp <replaceable>file</replaceable> <replaceable>file</replaceable>.orig</userinput></screen>

    <para>Патчи сохраняются в виде файлов с именем
      <filename>patch-*</filename>, где <replaceable>*</replaceable>
      обозначает путь к файлу, к которому применяется патч, такой как
      <filename>patch-Imakefile</filename> или
      <filename>patch-src-config.h</filename>.</para>

    <para>После того как файл был изменён, используется &man.diff.1;
      для получения разницы между первоначальной и изменённой
      версиями.  Параметр <option>-u</option> указывает &man.diff.1;
      выводить разницу в <quote>унифицированном</quote> формате,
      который также является предпочтительным.</para>

    <screen>&prompt.user; <userinput>diff -u <replaceable>file</replaceable>.orig <replaceable>file</replaceable> &gt; patch-<replaceable>pathname-file</replaceable></userinput></screen>

    <para>Для порождении патчей для новых добавляемых файлов
      используется параметр <option>-N</option>, который заставляет
      &man.diff.1; трактовать несуществующие прежде файлы как если бы
      они существовали, но имели пустое содержимое:</para>

    <screen>&prompt.user; <userinput>diff -u -N <replaceable>newfile</replaceable>.orig <replaceable>newfile</replaceable> &gt; patch-<replaceable>pathname-newfile</replaceable></userinput></screen>

    <para>Файлы с патчами помещаются в каталоге
      <varname>PATCHDIR</varname> (как правило, это <filename
	class="directory">files/</filename>), откуда они будут взяты
      автоматически.  Все патчи обязаны быть сделаны относительно
      каталога <varname>WRKSRC</varname> (как правило, это каталог, в
      который распаковывается исходный архив и где будет выполняться
      построение).  Для упрощения внесения изменений и обновлений
      избегайте наличия более чем одного патча для одного и того же
      файла (например, патчей <filename>patch-file</filename> и
      <filename>patch-file2</filename>, оба меняющих файл
      <filename>WRKSRC/foobar.c</filename>).  Обратите внимание, что
      если путь к изменяемому файлу содержит символ подчеркивания
      (<literal>_</literal>), то патч должен содержать в своем имени
      два подчеркивания вместо одного.  Например, для применения
      патча на файл с именем
      <filename>src/freeglut_joystick.c</filename> соответствующий
      патч следует назвать
      <filename>patch-src-freeglut__joystick.c</filename>.</para>

    <para>Пожалуйста, используйте для именования патчей только
      символы <literal>[-+._a-zA-Z0-9]</literal>.  Не используйте
      любые другие символы, кроме этих.  Не называйте патчи как
      <filename>patch-aa</filename> или
      <filename>patch-ab</filename>, всегда ссылайтесь на путь и
      название файла в названиях самих патчей.</para>

    <para>Существует альтернативный упрощённый способ создания патчей
      для существующих файлов.  Первые шаги те же самые: создание
      копии неизменённого файла с расширением
      <filename>.orig</filename> и внесение изменений.  После этого
      используйте <command>make makepatch</command>, чтобы обновить
      файлы с патчами в каталоге <filename>files</filename> данного
      порта.</para>

    <para>Не помещайте строки RCS в патчи.
      <application>Subversion</application> будет изменять их при
      помещении файлов в дерево портов, и когда мы будем их оттуда
      извлекать, они будут уже другие, поэтому применение патчей
      окончится неудачей.  Строчки RCS предваряются знаком доллара
      (<literal>&dollar;</literal>), и обычно начинаются с
      <literal>&dollar;Id</literal> или
      <literal>&dollar;RCS</literal>.</para>

    <para>Использование параметра рекурсии (<option>-r</option>) с
      командой &man.diff.1; для генерации патчей - это хорошо, но всё
      же, пожалуйста, смотрите на получающиеся патчи, чтобы убедиться
      в отсутствии ненужного мусора.  В частности, diff-разниц между
      двумя резервными копиями файлов, файлы
      <filename>Makefile</filename>, когда как порт использует
      <command>Imake</command> или GNU-версию программы
      <command>configure</command>, и так далее, не нужны, и должны
      быть удалены.  Если было необходимо отредактировать файл
      <filename>configure.in</filename> и запустить
      <command>autoconf</command> для перегенерации
      <command>configure</command>, не нужно включать файлы diff для
      <command>configure</command> (они частенько вырастают до
      нескольких тысяч строк!).  Вместо этого задайте
      <literal>USE_AUTOTOOLS=autoconf:261</literal> и включите
      diff-файл для <filename>configure.in</filename>.</para>

    <para>Старайтесь минимизировать в патчах объём нефункциональных
      изменений с пустыми символами.  В мире Открытого Исходного Кода
      является распространенным совместное использование проектами
      больших объемов кодовой базы, но с различными стилями и
      правилами отступов.  При копировании работающей функциональной
      части из одного проекта для исправления похожей области в
      другом, будьте аккуратны, пожалуйста: получаемый однострочный
      патч может указаться полон нефункциональных изменений.  Это не
      только увеличивает размер репозитория
      <application>Subversion</application>, но также усложняет поиск
      того, что конкретно вызвало проблему и что вообще
      поменялось.</para>

    <para>Если нужно удалить файл, сделайте это при выполнении цели
      <buildtarget>post-extract</buildtarget>, вместо того чтобы
      оформлять это как часть патча.</para>

    <para>Простые перемещения могут быть выполнены непосредственно из
      <filename>Makefile</filename> порта с использованием
      &man.sed.1; в режиме in-place.  Это удобно, когда при изменении
      используется значение переменной:</para>

    <programlisting>post-patch:
	@${REINPLACE_CMD} -e 's|for Linux|for FreeBSD|g' ${WRKSRC}/README</programlisting>

    <para>Довольно часто в исходных файлах портируемого программного
      обеспечения используется конвенция CR/LF.  Это может стать
      причиной проблем с дальнейшей упаковкой, предупреждениями
      компилятора или выполнением скриптов (таких как
      <literal>/bin/sh^M not found</literal>).  Для быстрого
      преобразования всех файлов из CR/LF просто в LF добавьте в
      <filename>Makefile</filename> порта эту запись:</para>

    <programlisting>USES=	dos2unix</programlisting>

    <para>Может быть задан точный список преобразуемых файлов:</para>

    <programlisting>USES=	dos2unix
DOS2UNIX_FILES=	util.c util.h</programlisting>

    <para>Используйте <varname>DOS2UNIX_REGEX</varname>, чтобы
      преобразовать группу файлов в разных подкаталогах.  Его
      параметром является регулярное выражение, совместимое с
      &man.find.1;.  Подробнее о формате в &man.re.format.7;.  Такой
      вариант удобен для преобразования всех файлов заданного
      расширения.  Для примера, преобразуем все исходные файлы, не
      затрагивая двоичные файлы:</para>

    <programlisting>USES=	dos2unix
DOS2UNIX_REGEX=	.*\.([ch]|cpp)</programlisting>

    <para>Другим вариантом является использование
      <varname>DOS2UNIX_GLOB</varname>, который вызывает
      <command>find</command> для каждого из перечисленных в нём
      элементов.</para>

    <programlisting>USES=	dos2unix
DOS2UNIX_GLOB=	*.c *.cpp *.h</programlisting>
  </sect1>

  <sect1 xml:id="slow-configure">
    <title>Конфигурирование</title>

    <para>Поместите все дополнительные команды, требуемые для
      настройки, в ваш скрипт <filename>configure</filename> и
      сохраните его в подкаталоге <filename>scripts</filename>.  Как
      отмечено выше, вы можете сделать это целями в файле
      <filename>Makefile</filename> и/или скриптами с именами
      <filename>pre-configure</filename> или
      <filename>post-configure</filename>.</para>
  </sect1>

  <sect1 xml:id="slow-user-input">
    <title>Обработка пользовательского ввода</title>

    <para>Если для построения, конфигурации или установки вашего
      порта требуется некоторый ввод со стороны пользователя, то вы
      должны задать переменную <varname>IS_INTERACTIVE</varname> в
      вашем файле <filename>Makefile</filename>.  В случае
      <quote>ночного построения</quote> это позволит пропустить ваш
      порт, если пользователь в своем окружении задал переменную
      <envar>BATCH</envar> (и если пользователь установил переменную
      <envar>INTERACTIVE</envar>, то будут строиться
      <emphasis>только</emphasis> порты, которые требуют
      взаимодействия с пользователем.  Это сэкономит значительное
      количество времени на части машин, которые постоянно строят
      порты (смотрите ниже).</para>

    <para>При наличии разумных ответов на задаваемые вопросы,
      подходящих по умолчанию, также рекомендуется проверять
      переменную <varname>PACKAGE_BUILDING</varname> и выключать
      интерактивный скрипт, если он есть.  Это позволит нам строить
      пакеты для помещения на компакт-диски и FTP-серверы.</para>
  </sect1>
</chapter>

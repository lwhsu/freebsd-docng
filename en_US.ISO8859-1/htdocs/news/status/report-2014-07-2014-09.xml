<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for
  Status Report//EN"
  "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >

<!-- $FreeBSD$ -->

<report>
  <date>
    <month>July-September</month>

    <year>2014</year>
  </date>

  <section>
    <title>Introduction</title>

     <?ignore
    <p><strong>This is a draft of the July-September 2014 status
	report.  Please check back after it is finalized, and an
	announcement email is sent to the &os;-Announce mailing
	list.</strong></p>
     ?>

    <p>This report covers &os;-related projects between July and
      September 2014.  This is the third of four reports planned for
      2014.</p>

    <p>The third quarter of 2014 was another productive quarter for
      the &os; project.  A lot of work has been done on various ARM
      platforms, with the goal of bringing them to Tier 1 status in
      &os; 11.  The various ports teams have also worked hard to
      improve the state of &os; as a desktop operating system.  As
      usual, performance improvements feature in several places in
      this report and many of these can benefit from user benchmarking
      to validate our results.</p>

    <p>Thanks to all the reporters for the excellent work!</p>

    <p>The deadline for submissions covering the period from October
      to December 2014 is January 7th, 2015.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='proj'>
    <title>New Automounter</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napiera&#322;a</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Automounter" />
      <url href="http://people.freebsd.org/~trasz/autofs.pdf" />
    </links>

    <body>
      <p>Limitations of the current automounter, <tt>amd(8)</tt>, are
	a recurring problem reported by many &os; users.  A new
	automounter is being developed to address these concerns.</p>

      <p>The automounter is a cleanroom implementation of
	functionality available in most other Unix systems, using
	proper kernel support implemented via an autofs filesystem.
	The automounter supports a standard map format, and will
	integrate with the Lightweight Directory Access Protocol
	(LDAP) service.</p>

      <p>The &os; Foundation worked with enterprise and university
	users to test the new automounter in existing LDAP-based
	environments, including some with thousands of map
	entries.</p>

      <p>The code is now ready to use.  It has been committed to
	11-CURRENT and 10-STABLE, and will ship as part of
	10.1-RELEASE.  There is ongoing work on improving performance
	and fixing possible bugs.</p>
    </body>

    <sponsor>
      The &os; Foundation
    </sponsor>

  </project>

  <project cat='proj'>
    <title>Chelsio iSCSI Offload Support</title>

    <contact>
      <person>
	<name>
	  <given>Sreenivasa</given>
	  <common>Honnur</common>
	</name>
	<email>shonnur@chelsio.com</email>
      </person>

      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napiera&#322;a</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>


    <body>
      <p>Building on the new in-kernel iSCSI target and initiator
	stack released in &os; 10.0, Chelsio Communications has begun
	developing an offload interface to take advantage of the
	hardware offload capabilities of Chelsio T4 and T5 10 and 40
	gigabit Ethernet adapters.</p>

      <p>The code implements hardware PDU offload for both target and
	initiator.  The iSCSI stack has been modified to provide a
	hardware-independent offload API, allowing offload drivers to
	be loaded as kernel modules, and to provide mechanisms for the
	system administrator to configure this feature.  The project
	is entering a testing phase.  The code will be released under
	the BSD license and is expected to be completed later in the
	year and ship in &os; 10.2-RELEASE.</p>
    </body>

    <sponsor>
      Chelsio Communications
    </sponsor>

    <sponsor>
      The &os; Foundation
    </sponsor>

    <help>
      <task>
	<p>Complete testing</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>Michael Lucas Books</title>

    <contact>
      <person>
	<name>
	  <given>Michael</given>
	  <common>Lucas</common>
	</name>
	<email>mwlucas@michaelwlucas.com</email>
      </person>
    </contact>

    <links>
      <url href="http://blather.michaelwlucas.com/archives/2088">book announcement</url>
      <url href="http://blather.michaelwlucas.com/archives/2119">pre-pub availability announcement</url>
      <url href="https://www.tiltedwindmillpress.com/?product=freebsd-mastery-storage-essentials">in-progress draft</url>
    </links>

    <body>
      <p>Lucas is working on a series of small &os; books.  The
	first one, FreeBSD Mastery: Storage Essentials, is underway,
	and covers GEOM, gpart, MBR, UFS, GELI, GBDE, disk sector
	alignment, and more.  You can pre-order the book at a discount
	from his web site, or wait for it to hit print and all major
	ebook retailers.</p>

      <p>Get status updates on his blog, or check @mwlauthor on
	Twitter.</p>
    </body>

    <help>
      <task>
	<p>Lucas needs to write faster.</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>Xfce</title>

    <contact>
      <person>
	<name>
	  <given>&os; Xfce Team</given>
	</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Xfce" />
      <url href="http://www.redports.org/browser/olivierd/xfce4">devel repo</url>
      <url href="https://people.freebsd.org/~olivierd/xfce4-4.11-screencast.webm">Video showing significant changes</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms including &os;.  It aims to be fast and
	lightweight while still being visually appealing and easy to
	use.</p>

      <p>The Xfce team continues to keep each piece of the Xfce
	Desktop up to date.  That is why we are working on the next
	stable release (no date scheduled).  There were no major
	updates in the ports tree except for cosmetic changes this
	quarter.</p>

      <p>Major upcoming changes include:</p>

      <ul>
	<li>Switch to the <tt>USES</tt> framework</li>

	<li>Support both GTK2 and GTK3, with GTK2 being the
	  default.</li>

	<li>A GNOME-like default icons theme</li>

	<li>Enhanced documentation (handbooks, FAQ)</li>
      </ul>

      <p>Below is a list of current ports in the devel repository (see
	link).</p>

      <ul>
	<li>deskutils/xfce4-xkb-plugin 0.7.0</li>

	<li>devel/xfce4-dev-tools 4.11.0</li>

	<li>misc/xfce4-appfinder 4.11.0</li>

	<li>multimedia/xfce4-parole 0.6.1 and 0.7.0</li>

	<li>sysutils/garcon 0.3.0</li>

	<li>sysutils/xfce4-settings 4.11.3</li>

	<li>x11/libxfce4menu 4.11.1</li>

	<li>x11/libxfce4util 4.11.0</li>

	<li>x11-wm/xfce4-desktop 4.11.8</li>

	<li>x11-wm/xfce4-panel 4.11.1</li>

	<li>x11-wm/xfce4-session 4.11.0</li>
      </ul>

      <p>There are also two new ports</p>

      <ul>
	<li>deskutils/xfce4-volumed-pulse 0.2.0</li>

	<li>x11/xfce4-dashboard 0.2.3 and 0.3.2</li>
      </ul>

      <p>For more details, please see our wiki page in the Links
	section.</p>
    </body>

    <help>
      <task>
	<p>Finish patching the ACPI helper (xfce4-power-manager).</p>
      </task>

      <task>
	<p>Continue to work on documentation, especially the Porter's
	  Handbook, and creata a FAQ).</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>ZFS Chapter of the Handbook</title>

    <contact>
      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>

	<email>allanjude@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Benedict</given>
	  <common>Reuschling</common>
	</name>

	<email>bcr@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>

	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/zfs.html">ZFS Section of the FreeBSD Handbook</url>
    </links>

    <body>
      <p>ZFS is one of the premier features of &os;, and the quality
	of the documentation should match that of other important
	features.  Much of the original documentation from Sun and
	Oracle has disappeared, moved, or is about the proprietary
	version of ZFS.  The OpenZFS project does not provide much
	documentation and instead provides users with a few links,
	including the &os; Handbook.  New users have many questions
	about ZFS and yet there exists a great deal more bad advice
	about ZFS than proper documentation.</p>

      <p>After over a year of work, a new ZFS chapter has been added
	to the &os; Handbook.  Over 20,000 words describe the basics
	of creating, managing, and maintaining a ZFS pool.  Advanced
	features like compression, deduplication, and delegation are
	covered.  The chapter also contains a glossary of terms,
	explaining a number of the concepts unique to ZFS, and
	documents some of the many <tt>sysctl</tt> variables that can
	be used for tuning.</p>

      <p>The remaining work to be done is in the FAQ section, which
	aims to help users address the most common questions or
	problems they might face with ZFS.  We would like to hear
	experiences, questions, misconceptions, gotchas, stumbling
	blocks and suggestions for the FAQ section from other users.
	A use cases section that highlights some of the cases where
	ZFS provides advantages over traditional file systems is also
	planned.</p>

      <p>Please send suggestions to the docs mailing list.</p>
    </body>

    <sponsor>ScaleEngine Inc.</sponsor>

    <help>
      <task>
	<p>Technical review by Matt Ahrens (co-creator of
	  ZFS)</p>
      </task>

      <task>
	<p>Improve the delegation section</p>
      </task>

      <task>
	<p>Improve the tuning section, and cover recently added sysctls</p>
      </task>

      <task>
	<p>Add a section on jails and the jailed property</p>
      </task>

      <task>
	<p>Add an FAQ section</p>
      </task>

      <task>
	<p>Add a Use Cases section</p>
      </task>

      <task>
	<p>General editing and review</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Jenkins Continuous Integration for &os;</title>

    <contact>
      <person>
	<name>
	  <given>Craig</given>
	  <common>Rodrigues</common>
	</name>
	<email>rodrigc@FreeBSD.org</email>
      </person>

      <person>
	<name>Jenkins Administrators</name>
	<email>jenkins-admin@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Testing</name>
	<email>freebsd-testing@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://jenkins.freebsd.org">Jenkins CI server in &os; cluster</url>
      <url href="https://wiki.freebsd.org/201405DevSummit/Jenkins">Jenkins working group at DevSummit</url>
      <url href="http://www.bsdcan.org/2014/schedule/events/445.en.html">Jenkins presentation at BSDCan</url>
      <url href="http://clang-analyzer.llvm.org/scan-build.html">clang static analyzer</url>
      <url href="http://scan.freebsd.org">FreeBSD static analysis results</url>
      <url href="http://www.bsdnow.tv/episodes/2014_07_02-base_iso_100">BSD Now episode 44</url>
      <url href="http://www.slideshare.net/CraigRodrigues1/libvirt-bhyve">livirt and bhyve"</url>
      <url href="https://github.com/jmmv/kyua">Kyua testing framework</url>
      <url href="https://issues.jenkins-ci.org/browse/JENKINS-24521">Issue to update Jenkins to JNA 4.1.0 for FreeBSD</url>
      <url href="https://github.com/jenkinsci/jenkins/pull/1387">Pull request #1 to upgrade JNA in Jenkins</url>
      <url href="https://github.com/jenkinsci/jenkins/pull/1410">Pull request #2 to upgrade JNA in Jenkins</url>
      <url href="http://jenkins.mouf.net/job/pkg/">Jenkins job for testing pkg</url>
      <url href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193499">yacc bug found by kyua</url>
      <url href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193246">IPv6 multicast join() problem found by Jenkins</url>
      <url href="https://github.com/rodrigc/kyua/wiki/Quickstart-Guide">Kyua Quickstart Guide</url>
    </links>

    <body>
      <p>In May, &a.rodrigc; led a working group <em>Continuous
	  Integration and Testing with Jenkins for &os;</em> at the
	&os; Devsummit in Ottawa.  &a.rodrigc; also gave a Jenkins
	presentation at BSDCan.</p>

      <p>At BSDCan, &a.rodrigc; had some discussions with &a.jmmv;
	about how to better integrate &os; testing efforts with
	Jenkins and kyua.  As a result of this discussion, &a.jmmv;
	enhanced the <tt>kyua</tt> testing framework with a
	<tt>kyua report-junit</tt> command.  This command takes kyua
	test results and outputs a test report in JUnit XML format.
	Jenkins can directly import JUnit XML test results and display
	them nicely.</p>

      <p>In June, &a.rodrigc; was interviewed for episode 44 of BSD
	Now.  The interview covered Jenkins and Continuous Integration
	in the &os; project.</p>

      <p>In July, &a.rodrigc; gave a presentation to the Bay Area &os;
	Users Group (BAFUG), <em>Libvirt and bhyve</em>, based on
	experience he had with those technologies when used with
	Jenkins.</p>

      <p>&a.lwhsu; set up a Jenkins job to run the LLVM scan-build
	tool to perform static analysis of the &os; code, and make the
	results availalble at <tt>scan.freebsd.org</tt>.</p>

      <p>&a.swills; modified the Jenkins job which builds
	<tt>pkg(8)</tt> to use the <tt>kyua report-junit</tt> command
	to integrate <tt>pkg(8)</tt> test results in Jenkins.</p>

      <p>Anthony Williams reported that the version of the Java
	Native Access (JNA) library bundled with Jenkins has problems
	on &os;.  This causes problems with Jenkins using libpam and
	other plugins that use JNA.  Craig filed JENKINS-24521
	against Jenkins.  Craig submitted patches to Jenkins to update
	Jenkins to use JNA 4.1.0, which has fixes for &os;.  </p>

      <p>&a.rodrigc; worked on automatically running the tests in the
	&os; <tt>/usr/tests</tt> directory under Jenkins using the
	<tt>kyua</tt> test framework.  &a.rodrigc; provided feedback
	to &a.jmmv; about <tt>kyua</tt> and &a.jmmv; incorporated some
	of the feedback as bugfixes and feature enhancements to
	<tt>kyua</tt>.  &a.rodrigc; committed some fixes to &os; to
	eliminate some test failures.  One of the tests still results
	in a crash in byacc.  This is being tracked in PR 193499.
	Thomas E. Dickey (byacc maintainer) submitted a patch to fix
	the problem, and this has been committed to &os;.</p>

      <p>&a.rodrigc; analyzed the cause of some startup errors in
	Jenkins when opening a multicast socket.  He had some
	discussion with &a.bms; captured in PR 193246.  The Java JDK
	depends on functionality in Solaris where it is possible to
	open an IPv4 multicast socket, but with an IPv4 multicast
	address mapped to an IPv6 address.  On Linux, there are
	modifications to the JDK itself to work around this.  &a.bms;
	said that the work to make the &os; IPv6 stack behave like
	Solaris would require some work.</p>

      <p>&a.rodrigc; started writing a Kyua Quickstart Guide.  This
	guide is meant to help new kyua users who want to write tests
	and run them under kyua.  &a.rodrigc; is seeking feedback to
	help improve this guide.</p>
    </body>

    <help>
      <task>
	<p>Upstream more fixes to Jenkins for &os;, such as JNA
	  fixes.</p>
      </task>

      <task>
	<p>Automate the build of <tt>/usr/tests</tt>.</p>
      </task>

      <task>
	<p>Set up more builds based on examples from the existing &os;
	  Tinderbox.</p>
      </task>

      <task>
	<p>Get feedback for improving the Kyua Quickstart Guide.</p>
      </task>

      <task>
	<p>We need more people to join us on
	  freebsd-testing@FreeBSD.org and help out.  We especially
	  need people with devops and scripting experience to help us
	  set up more builds and tests.  We would also like to
	  integrate with other parts of the project, such as
	  Phabricator.</p>
      </task>
    </help>
  </project>

  <project cat='bin'>
    <title>LLVM Address Sanitizer (Asan)</title>

    <contact>
      <person>
	<name>
	  <given>Viktor</given>
	  <common>Kuzutov</common>
	</name>
	<email>vkutuzov@accesssoftek.com</email>
      </person>
    </contact>

    <links>
      <url href="https://code.google.com/p/address-sanitizer/" />
      <url href="http://clang.llvm.org/docs/AddressSanitizer.html" />
      <url href="http://lab.llvm.org:8011/builders/sanitizer_x86_64-freebsd">Buildbot</url>
      <url href="http://lists.freebsd.org/pipermail/svn-src-head/2014-July/060270.html" />
      <url href="http://lists.freebsd.org/pipermail/svn-src-head/2014-July/060504.html" />
    </links>

    <body>
      <p>The LLVM address sanitizer (Asan) is a fast memory error
	detector that can detect use-after-free errors and buffer
	overflows.  It has been ported to &os;.  The mainline version
	of LLVM is known to pass all of the tests in the LLVM and Asan
	test suites without unexpected failures on &os; 10.0.</p>

      <p>A buildbot running sanitizer tests under &os; stable/10
	has been established.  See the Links section.</p>

      <p>To make it possible to run programs with sanitizer
	checks enabled on &os;, a new sysctl named
	<tt>kern.proc_vmmap_skip_resident_count</tt> has been added.
	See the Links section.  Running the address sanitizer checks
	on stable/10 requires this sysctl to be set to 1.</p>

      <p>A similar work is in progress to add &os; support to the
	thread sanitizer (Tsan), which detects data races in parallel
	programs.</p>
    </body>
  </project>

  <project cat='proj'>
    <title>&os; Preseed Installation (PXE)</title>

    <contact>
      <person>
	<name>
	  <given>Kamil</given>
	  <common>Czekirda</common>
	</name>
	<email>kczekirda@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SummerOfCode2014/FreeBSD_PXE_preseed" />
    </links>

    <body>
      <p>This is a Google Summer of code project to provide
	a noninteractive &os; installation process from the network.  In
	the first part, an implementation was added for scripted
	<tt>bsdinstall(8)</tt>.  It supports variables such as KEYMAP,
	HOSTNAME, MIRROR, RELEASE, TIMEZONE, DAEMONS, ROOTPWHASH, and
	USERS.  Network configuration, ZFS options, and others are
	also included.</p>

      <p>The second part of the project is about booting the
	<tt>fai</tt> (Fully Automatic Installer) from the network by
	PXE.  An installer distro was created based on mfsBSD.  After
	boot, <tt>fai</tt> looks for the "bootfile-name" parameter
	from the DHCP server.  This parameter tells <tt>fai</tt> where
	the <tt>bsdinstall</tt> script is located.  <tt>fai</tt>
	supports MAC-based configuration, or a default if a MAC-based
	configuration file does not exist.</p>
    </body>

    <sponsor>
      Google Summer of Code 2014
    </sponsor>

    <help>
      <task>
	<p>Documentation, including a HOWTO and handbook</p>
      </task>

      <task>
	<p>More tests in different configurations</p>
      </task>

      <task>
	<p>Support for more than one network interface is planned</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNOME/&os;</title>

    <contact>
      <person>
	<name>
	  <common>&os; GNOME Team </common>
	</name>
	<email>gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/gnome" />
      <url href="https://wiki.gnome.org/Projects/Jhbuild/FreeBSD" />
      <url href="http://marcuscom.com/downloads/marcusmerge" />
    </links>

    <body>
      <p>GNOME is a desktop environment and graphical user interface
	that runs on top of a computer operating system.  GNOME is
	part of the GNU Project and can be used with various Unix-like
	operating systems, including &os;.</p>

      <p>MATE is a fork of GNOME 2.  The MATE ports were updated to
	the 1.8 versions.</p>

      <p>Cairo, the vector graphics library used by GNOME, has been
	updated to 1.12.  This allowed the merge of GNOME 3 to begin.
	We are currently doing test builds to find ports broken by the
	update and pruning ports that do not build any more because of
	incompatible updates.</p>

      <p>Gustau Perez started preliminary work on the next development
	version of GNOME in MC, to be ready for GNOME 3.15.  We will
	skip 3.14 entirely.</p>
    </body>

    <help>
      <task>
	<p>Finish the GNOME 3.12 merge, and start tracking GNOME 3.15
	  (development series).</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>The Graphics Stack on &os;</title>

    <contact>
      <person>
	<name>
	  <common>&os; Graphics team</common>
	</name>
	<email>x11@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="http://trillian.chruetertee.ch/ports/browser/trunk">Graphics stack ports-related development repository</url>
      <url href="http://lists.freebsd.org/pipermail/freebsd-ports-announce/2014-October/000096.html">Removal of legacy X.Org announcement</url>
      <url href="http://wiki.x.org/wiki/Events/XDC2014/">XDC 2014</url>
    </links>

    <body>

      <p>The newest graphics stack (that is, the set of ports conditional on the
	<tt>WITH_NEW_XORG</tt> knob) was enabled on all architectures.
	The only regression is for users of Intel GPUs and &os; 8.X or
	9.0.  Those releases lack the required kernel driver and
	therefore <tt>xf86-video-intel</tt> will not work (the last
	UMS-aware version does not work with xserver 1.12).  Users can
	still use <tt>xf86-video-vesa</tt> if they cannot or do not
	want to update their &os; workstation.  Owners of Radeon GPUs
	can use <tt>xf86-video-ati-ums</tt> 6.14.6 with
	<tt>xserver</tt> 1.12 if the KMS driver is not available (that
	is, before &os; 9.3).</p>

      <p>The old graphics stack will be removed with the next update
	to these ports.  See the announcement in the Links
	section.</p>

      <p>Hardware context support was added to the i915 driver in both
	HEAD and 10.1-RELEASE. This will allow us to update libglapi,
	libGL, dri, libEGL and libglesv2 ports to a newer version of
	Mesa.  The latest version is already available from our
	development ports tree (see the links section).</p>

      <p>Cairo was updated to 1.12.  This will allow the &os; GNOME
	team to upgrade pango and Gtk+ 3.  Unfortunately, the update
	also revealed that xf86-video-intel 2.7.1 was in a much worse
	state than previously assumed.</p>

      <p>We will attend XDC 2014 (X.Org Developer's Conference) from
	October 8th through 10th in Bordeaux, France.  The goal is to
	reconnect with graphics stack developers, who are mostly working with
	Linux these days.  We will give a presentation on the current
	state of this stack on &os;.  See the XDC website in the Links
	section for the program and live streaming.</p>
    </body>

    <help>
      <task>
	<p>See the "Graphics" wiki page for up-to-date
	  information.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>ZFSguru</title>

    <contact>
      <person>
	<name>
	  <given>Jason</given>
	  <common>Edwards</common>
	</name>
	<email>sub.mesa@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="http://zfsguru.com" />
      <url href="http://zfsguru.com/news/stateoftheproject/2014" />
      <url href="http://zfsguru.com/forum/zfsgurudevelopment/876" />
    </links>

    <body>
      <p>ZFSguru is a multifunctional server appliance with a strong
	emphasis on storage.  ZFSguru began as simple web-interface
	frontend to ZFS, but has since grown into a &os; derivative
	with its own infrastructure.  The scope of the project has
	also grown with the inclusion of add-on packages that add
	functionality beyond the traditional NAS functionality found
	in similar product like FreeNAS and NAS4Free.  ZFSguru aims to
	be a true multifunctional server appliance that is extremely
	easy to set up and can unite both novice and more experienced
	users in a single user interface.  The modular nature of the
	project combats the danger of bloat, whilst still allowing
	extended functionality to be easily deployed.</p>

      <p>The development work in Q3 focused heavily on the new build
	infrastructure.  This allows the ZFSguru project to release
	new system images together with addon services at much higher
	frequency and with much less manual intervention.  This should
	free up a lot of development time to be spent on the core of
	the project: the web interface.</p>

      <p>Furthermore, a new website and forum is being worked on,
	replacing the old-fashioned website that offers only limited
	functionality.  The new website will be linked to the server
	database, providing real-time updates about the project.</p>

      <p>In addition, a new platform for collaborated development is
	in the works.  A service addon has been created for the GitLab
	project, which is a drop-in replacement of the popular GitHub
	website.  The choice was made to host our own solution and not
	rely on GitHub itself.  In retrospect this appears to have
	been a good decision.  The recent development where GitHub
	removed projects after DCMA-takedowns being sent is
	incompatible with the philosophy of free-flow-of-information,
	of which the ZFSguru project is a strong proponent.  By
	hosting our own solution, we have avoided any dependency on
	third party projects.</p>

      <p>The next task will be to introduce a new remote database
	structure, dubbed GuruDB.  This will speed up the
	web-interface as well as introduce Service Bulletins which
	address important notifications to our users, as well as
	announce new releases.</p>

      <p>After GuruDB, the Migration Manager is one of the last
	remaining features still missing in the web-interface.  This
	functionality provides an easy way to upgrade the current
	system by performing a new clean installation, but migrate all
	relevant configuration to the new installation.  It also
	allows users to 'backup' all system configuration in a single
	file to be stored on a different machine should things go
	awry.</p>

      <p>A longer version of the 2014 development progress of the
	ZFSguru project and information specific to the newly-released
	10.1-002 system image can be found in the Links section.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>&os; Python Ports</title>

    <contact>
      <person>
	<name>
	  <given>&os;</given>
	  <common>Python Team</common>
	</name>
	<email>python@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/Python">The FreeBSD Python Team Page</url>
      <url href="irc://freebsd-python@irc.freenode.net">IRC channel</url>
    </links>

    <body>
      <p>The &os; Python team continued to improve the overall
	experience with Python-based software on &os;.</p>

      <p>During the last quarter, the <tt>bsd.python.mk</tt> bits of
	the ports infrastructure were converted to the more modern
	<tt>USES</tt> format.  Several options, such as support for
	<tt>easy_install</tt>, were deprecated or removed to make the
	infrastructure easier to maintain and less complex for
	port maintainers.</p>

      <p>The Python ports were refactored and simplified to improve
	maintainability and to get rid of long-standing issues due to the
	previously complex and error-prone build process.</p>

      <p>The Python 2 branch was updated to Python 2.7.8 and
	<tt>setuptools</tt> to 5.5.1.</p>

      <p>With the availability of pkg 1.3, installing Python packages
	and modules for different Python versions is now supported in
	the package management infrastructure.  This allows us to
	remove the previously required port duplicates for Python 2
	and Python 3.</p>
    </body>

    <help>
      <task>
	<p>Retire the Python 3 specific port duplicates</p>
      </task>

      <task>
	<p>Convert ports to the new <tt>USES</tt> syntax</p>
      </task>

      <task>
	<p>More tasks can be found on the team's wiki page (see
	  Links).</p>
      </task>

      <task>
	<p>To get involved, interested people can say hello on IRC
	  and let us know their areas of interest!</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Updating OpenCrypto</title>

    <contact>
      <person>
	<name>
	  <given>John-Mark</given>
	  <common>Gurney</common>
	</name>
	<email>jmg@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://p4db.freebsd.org/depotTreeBrowser.cgi?FSPC=//depot/projects/opencrypto">Source in Perforce</url>
      <url href="http://freebsdfoundation.blogspot.com/2014/08/freebsd-foundation-announces-ipsec.html">FreeBSD Foundation announces IPsec Enhancement Project</url>
    </links>

    <body>
      <p>The project adds support for the AES-GCM and AES-CTR
	cryptography modes to the OpenCrypto framework.  Both software
	and AES-NI accelerated versions are now functional and
	working.  Ermal Luçi (eri@) is working on adding support for
	these additional modes to IPsec.</p>
    </body>

    <sponsor>
      The &os; Foundation
    </sponsor>

    <sponsor>
      Netgate
    </sponsor>

    <help>
      <task>
	<p>Create a test suite for the most common modes.</p>
      </task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Newer ARM Boards</title>

    <contact>
      <person>
	<name>
	  <given>Ganbold</given>
	  <common>Tsagaankhuu</common>
	</name>
	<email>ganbold@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/tsgan/qualcomm">Some preliminary code for Snapdragon board IFC6410</url>
    </links>

    <body>
      <p>Work on initial support of the IFC6410 board, which was
	stopped due to a bricked bootloader, has been started again.
	This board has the Qualcomm Snapdragon S4 SoC, featuring the
	Krait CPU.  This CPU is considered a "platform" for use in
	smartphones, tablets, and smartbook devices.  Krait has many
	similarities with the ARM Cortex-A15 CPU and is also based on
	the ARMv7 instruction set.  These peripherals are working:</p>

      <ul>
	<li>Qualcomm High Speed UART driver for MSM 7000/8000 series
	  chips (included in <tt>src</tt> tree)</li>

	<li>Krait Timer</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Get the MMC driver working.  May need more help from
	  experts.</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>The &os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The &os; Core Team constitutes the project's "Board of
	Directors", responsible for deciding the project's overall
	goals and direction as well as managing specific areas of the
	&os; project landscape.</p>

      <p>The third quarter of this year was a relatively quiet time in
	terms of Core Team activity.  No major policy changes were
	decided, but the criterea for awarding commit bits were reviewed
	and the existing requirements were clarified and documented
	at <a href="http://www.freebsd.org/internal/proposing-committers.html"
	>http://www.freebsd.org/internal/proposing-committers.html</a>.</p>

      <p>Other items dealt with by core during this period:</p>

      <ul>
	<li>Confirmed with Microsoft that it is permissible to include
	  DCTCP in &os;.</li>

	<li>Promoted git-beta.freebsd.org out of beta-test to an
	  official service, consequently renaming it to
	  git.freebsd.org.</li>

	<li>Mediated between groups of contributors and committers
	  adopting different positions on the on-going work to
	  introduce ASLR and associated technologies.</li>

	<li>Worked with the &os; Foundation to obtain a license for
	  XenForo, and with the forum administrators on plans to
	  migrate the &os; forums onto the &os; cluster and to
	  switch to XenForo.</li>
      </ul>

      <p>During this period, three commit bits were granted, and two
	commit bits were taken in for safe keeping.</p>
    </body>
  </project>

  <project cat='bin'>
    <title>SSE Variants of <tt>libc</tt> Routines for amd64</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://trac.baldwin.cx:8080/freebsd/wiki/LibCSSE" />
    </links>

    <body>
      <p>I have written SSE/AVX-optimized versions of a few
	<tt>libc</tt> routines for amd64.  So far the list includes
	<tt>memcpy</tt>, <tt>memset</tt>, and <tt>strlen</tt>.  For
	each routine I have written a simple regression test as well
	as performed some simple microbenchmarks on various AMD and
	Intel CPUs.</p>

      <p>The simplest routine is <tt>strlen</tt> which appears to be a
	general win in microbenchmarks.  <tt>memcpy</tt> and
	<tt>memset</tt> have proven trickier as different variants can
	behave quite differently on different CPUs.</p>

      <p>At present, I do not yet have a patch relative to
	<tt>libc</tt>.  Once I do, this will be suitable for more
	testing.  I would like to see some real-world benchmarks that
	show measurable improvement before pushing any of this up into
	the tree.</p>
    </body>

    <help>
      <task>
	<p>Create a branch that holds a modified <tt>libc</tt> and is
	  suitable for testing</p>
      </task>
    </help>
  </project>

  <project cat='team'>
    <title>Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Frederic</given>
	  <common>Culot</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Port</given>
	  <common>Management Team</common>
	</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/ports/" />
      <url href="http://www.freebsd.org/doc/en_US.ISO8859-1/articles/contributing-ports/" />
      <url href="http://portsmon.freebsd.org/index.html" />
      <url href="http://portscout.freebsd.org/" />
      <url href="http://www.freebsd.org/portmgr/index.html" />
      <url href="http://blogs.freebsdish.org/portmgr/" />
      <url href="http://www.twitter.com/freebsd_portmgr/" />
      <url href="http://www.facebook.com/portmgr" />
      <url href="http://plus.google.com/communities/108335846196454338383" />
    </links>

    <body>
      <p>As of the end of Q3, the ports tree holds a bit more than
	24,000 ports, and the PR count is below 1,400.  Despite the
	summer holidays the tree saw sustained activity with more than
	9,000 commits and almost 2,000 ports PRs closed!</p>

      <p>In Q3, five new developers were granted a ports commit bit.
	None were taken in for safekeeping.</p>

      <p>On the management side, tabthorpe@ decided to step down from
	his portmgr duties in July.  No other changes were made to the
	team during Q3.</p>

      <p>This quarter also saw the release of the third quarterly
	branch, namely 2014Q3.</p>

      <p>On the QA side, 34 exp-runs were performed to validate
	sensitive updates or cleanups.</p>

      <p>Last, the 20th anniversary of the ports tree was commemorated
	during Q3 and a video was published for this event.</p>
    </body>

    <help>
      <task>
	<p>Tremendous work was done on the PR front in Q3 and we would
	  be very pleased to see committers dedicate themselves to
	  closing as many as possible in Q4 as well.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>SDIO Driver</title>

    <contact>
      <person>
	<name>
	  <given>Ilya</given>
	  <common>Bakulin</common>
	</name>
	<email>ilya@bakulin.de</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SDIO">SDIO project page on FreeBSD wiki</url>
      <url href="https://github.com/kibab/freebsd/tree/mmccam">Source code</url>
      <url href="https://reviews.freebsd.org/D862">Patch for review</url>
    </links>

    <body>
      <p>SDIO is an interface designed as an extension of the existing
	SD card standard, allowing the connection of different peripherals
	to a host with a standard SD controller.  Peripherals
	currently sold in the general market include WLAN/BT modules,
	cameras, fingerprint readers, and barcode scanners.  SDIO is
	also used to connect some peripherals in products like
	Chromebooks and Wandboard.</p>

      <p>The current main focus of the project is to reimplement the
	existing MMC/SD stack using the CAM framework.  This will
	allow utilizing the well-tested CAM locking model and debug
	features.</p>

      <p>The first version of the code was uploaded on Phabricator for
	review.  The new stack is able to attach to the SD card and
	bring it to an operational state.  The only supported SD
	controller driver is <tt>ti_sdhci</tt> which is used by the
	BeagleBone Black.  Modifying other SDHCI-compliant drivers
	should not be a hard task.</p>
    </body>

    <help>
      <task>
	<p>At this point, feedback from kernel developers is really
	  needed.  This may be done in the form of code review.  If
	  the chosen way of implementing the CAM-aware MMC stack is
	  considered correct, then adding code for interacting with SD
	  cards (for example, setting the optimal transfer rates) will
	  be the next task.</p>
      </task>

      <task>
	<p>Write a CAM peripheral driver that implements an interface
	  to the &os; <tt>disk(9)</tt>.  It will send MMC I/O
	  commands using the MMC XPT layer.</p>
      </task>

      <task>
	<p>Extending <tt>camcontrol(8)</tt> to make it possible to
	  send MMC-specific commands directly to the MMC/SD card using
	  pass(4) will greatly assist in developing new features for
	  the stack.</p>
      </task>

      <task>
	<p>Modify the <tt>sdhci(4)</tt> driver to work with the new
	  stack.  This is required to work on the new stack using PC
	  hardware, not only the BeagleBone Black.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>QEMU bsd-user-Enabled Ports Building</title>

    <contact>
      <person>
	<name>
	  <given>Sean</given>
	  <common>Bruno</common>
	</name>
	<email>sbruno@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Juergen</given>
	  <common>Lock</common>
	</name>
	<email>nox@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Stacey</given>
	  <common>Son</common>
	</name>
	<email>sson@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/QemuUserModeHowTo">Generic Explanation of QEMU bsd-user</url>
      <url href="http://chips.ysv.freebsd.org/packages">Current ARMv6 Packages</url>
      <url href="https://github.com/seanbruno/qemu-bsd-user">Github repo of development source</url>
    </links>

    <body>
      <p>&os; packages for the Tier-1 i386 and amd64 CPU architectures
	are built by a single very high-performance machine.  Other
	architectures lack equivalent hardware, and we began
	experimenting with QEMU's user-mode emulation to cross-build
	packages from an amd64 builder.</p>

      <p>We have moved from just being able to produce packages to
	providing a stable repo of packages for ARMv6.</p>

      <p><tt>ports-mgmt/poudriere-devel</tt> is still the current
	method for building packages.  See the previous status report for
	explanations and details on methods.</p>
    </body>
  </project>

  <project cat='proj'>
    <title><tt>bhyve</tt></title>

    <contact>
      <person>
	<name>
	  <given>Peter</given>
	  <common>Grehan</common>
	</name>
	<email>grehan@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Neel</given>
	  <common>Natu</common>
	</name>
	<email>neel@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Tycho</given>
	  <common>Nightingale</common>
	</name>
	<email>tychon@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>freebsd@allanjude.com</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bhyve.org">bhyve FAQ and talks</url>
      <url href="http://www.youtube.com/watch?v=lTOiSyu0-MA">bhyve past, present, future</url>
    </links>

    <body>
      <p><tt>bhyve</tt> is a hypervisor that runs on the FreeBSD/amd64
	platform.  At present, it runs &os; (8.x or later), Linux
	i386/x64, OpenBSD i386/amd64, and NetBSD/amd64 guests.
	Current development is focused on enabling additional guest
	operating systems and implementing features found in other
	hypervisors.</p>

      <p>A significant amount of progress has been made since the last
	status report.  Most importantly, all of this work has been
	MFCed to the 10-STABLE branch and will be included in the 10.1
	release.</p>

      <p>Support for AMD processors is being developed in the
	<tt>bhyve_svm</tt> SVN project branch.  The branch is almost
	at feature-parity with mainline Intel VT-x support, and will
	be committed into -CURRENT in the near future.</p>

      <p>New features added this quarter:</p>

      <ul>
	<li>Guest support for recent Linux i386/x64, OpenBSD
	  i386/amd64, and NetBSD amd64.</li>

	<li>Force guest reset and poweroff with <tt>bhyvectl</tt></li>

	<li>Allow the SMBIOS UUID to be set from the command line</li>

	<li>PCI MMIO extended config space access</li>

	<li>Improved AHCI error handling, legacy interrupt mode</li>

	<li>Additional instruction emulation required by a number of
	  guests</li>

	<li>Legacy x86 task switching to support double-faults in
	  FreeBSD/i386</li>

	<li>Legacy PCI interrupts, operation without an APIC (OpenBSD
	  install)</li>

	<li>Guest memory not included by default in core dumps</li>

	<li>Allow guest vCPUs to be pinned to individual host
	  CPUs</li>

	<li>Virtio RNG device emulation</li>

	<li>Chapter about <tt>bhyve</tt> added to &os;
	  Handbook</li>
      </ul>
    </body>

    <help>
      <task>
	<p>Improve documentation</p>
      </task>

      <task>
	<p>CSM BIOS boot support for non UEFI-aware guests</p>
      </task>

      <task>
	<p>Add support for virtio-scsi</p>
      </task>

      <task>
	<p>Improve virtio-net, add offload features, support multiple
	  queues</p>
      </task>

      <task>
	<p>Implement Intel 82580 and e1000 NIC emulation</p>
      </task>

      <task>
	<p>Netmap support</p>
      </task>

      <task>
	<p>Flexible networking backend: wanproxy, vhost-net</p>
      </task>

      <task>
	<p>Move to a single process model, instead of
	  <tt>bhyveload</tt> and <tt>bhyve</tt></p>
      </task>

      <task>
	<p>Support running <tt>bhyve</tt> as non-root</p>
      </task>

      <task>
	<p>Add filters for popular VM file formats (VMDK, VHD,
	  QCOW2)</p>
      </task>

      <task>
	<p>Implement an abstraction layer for video (no X11 or SDL in
	  base system)</p>
      </task>

      <task>
	<p>Support for VNC as a video output</p>
      </task>

      <task>
	<p>Suspend/resume support</p>
      </task>

      <task>
	<p>Live Migration</p>
      </task>

      <task>
	<p>Nested VT-x support (bhyve in bhyve)</p>
      </task>

      <task>
	<p>Support for other architectures (ARM, MIPS, PPC)</p>
      </task>
    </help>
  </project>

  <project cat='ports'>
    <title>KDE on &os;</title>

    <contact>
      <person>
	<name>
	  <given>KDE on &os; team</given>
	</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://freebsd.kde.org/" />
      <url href="https://freebsd.kde.org/area51.php" />
      <url href="https://wiki.freebsd.org/KDE" />
      <url href="https://mail.kde.org/mailman/listinfo/kde-freebsd" />
      <url href="http://portscout.freebsd.org/kde@freebsd.org.html">PortScout</url>
    </links>

    <body>
      <p>The KDE on &os; team focuses on packaging and making sure the
	experience of KDE and Qt on &os; is as good as possible.</p>

      <p>First of all, we are happy to announce that Alonso Schaich,
	longtime contributor to our experimental area51 repositories,
	has become a ports committer, mentored by KDE on &os; members
	Raphael Kubo da Costa (rakuco@) and Max Brazhnikov
	(makc@).</p>

      <p>During this quarter, the team has kept most of the KDE and Qt
	ports up-to-date, working on the following releases:</p>

      <ul>
	<li>CMake 3.0.1 and 3.0.2</li>

	<li>PyQt 4.11.1, SIP 4.16.2, QScintilla 2.8.3</li>

	<li>DigiKam 4.2.0 (in area51)</li>

	<li>KDE 4.13.3, 4.14.0 and 4.14.1 (in area51)</li>

	<li>KDE Telepathy 0.8.0 (in area51)</li>
      </ul>

      <p>Additionally, work on updating the Qt5 ports to the 5.3
	series has begun, and we intend to commit the updated ports in
	our experimental area51 repository to the ports tree in
	Q4.</p>
    </body>

    <help>
      <task>
	<p>Updating out-of-date ports, see the Links Portscout entry
	  for a list.</p>
      </task>

      <task>
	<p>Committing all the updated ports we have been accumulating
	  in our experimental repositories into the ports tree.</p>
      </task>
    </help>
  </project>

  <project cat="arch">
    <title>FreeBSD/arm64</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/base/projects/arm64/" />
    </links>

    <body>
      <p>Until recently, all ARM CPU designs were 32-bit only.  With
	the introduction of the ARMv8 architecture, ARM has added a
	new 64-bit mode.  This new mode has been named AArch64.  Arm64
	is the name of the in-progress port of &os; to ARMv8 CPUs when
	in AArch64 mode.</p>

      <p>Since the last status report, &os; has started to execute
	userland instructions.  This includes implementing more of the
	needed kernel functions to handle creation of processes.
	Using clang to compile userland has found a few issues with
	the version in the base system.  These issues are expected to
	be resolved when clang 3.5 is imported.</p>

      <p>Initial support for device drivers has been added.  This
	includes the start of the <tt>bus_space</tt> functions and
	interrupt handling.  This allowed the existing timer and
	interrupt controller drivers from armv6 to be used as these
	devices are similar.  The FDT data is now being passed from
	the loader to the kernel using the standard mechanism.</p>

      <p>The pmap implementation has been changed to be based on the
	amd64 code.  This fixes a number of issues with the old
	implementation.</p>
    </body>

    <help>
      <task>
	<p>Boot to multi-user mode</p>
      </task>

      <task>
	<p>Get dynamic libraries working</p>
      </task>

      <task>
	<p>Test on real hardware</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>UEFI Boot</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Nathan</given>
	  <common>Whitehorn</common>
	</name>
	<email>nwhitehorn@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/UEFI">&os; UEFI wiki page</url>
      <url href="http://www.freebsd.org/snapshots/">&os;&nbsp;snapshots</url>
    </links>

    <body>
      <p>The Unified Extensible Firmware Interface, or UEFI, provides
	boot- and run-time services for x86 and other computers.  For
	the x86 architecture it replaces the legacy BIOS.  This
	project will adapt the &os; loader and kernel boot process for
	compatibility with UEFI firmware, found on contemporary
	servers, desktops, and laptops.</p>

      <p>Over the last three months Ed and others refined the existing
	UEFI support and merged it to the stable/10 branch for the
	upcoming &os; 10.1 release.</p>

      <p>To avoid the risk of a regression, the standard &os; 10.1
	install images continue to use the existing partitioning
	scheme and support only legacy BIOS boot.  Separate
	UEFI-enabled installer images will be included with 10.1.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>
	<p>Document manual installation, including dual-boot
	  configurations.</p>
      </task>

      <task>
	<p>Implement boot1.efi for ZFS file systems.</p>
      </task>

      <task>
	<p>Add support for UEFI variables stored in non-volatile
	  memory (NVRAM).</p>
      </task>

      <task>
	<p>Debug boot failures with certain UEFI firmware
	  implementations.</p>
      </task>

      <task>
	<p>Support secure boot.</p>
      </task>
    </help>
  </project>

  <project cat='bin'>
    <title>LLDB Debugger Port</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/lldb"/>
    </links>

    <body>
      <p>LLDB is the debugger project associated with Clang/LLVM.  It
	supports the Mac OS X, Linux, and &os; platforms, with Windows
	support under development.  It builds on existing components
	in the larger LLVM project, for example using Clang's
	expression parser and LLVM's disassembler.</p>

      <p>Work over the last three months consisted mainly of
	maintenance, ensuring that the upstream &os; port continues to
	build and that testsuite failures are promptly addressed.</p>

      <p>I plan to import a new LLDB snapshot after the base system
	Clang is updated to 3.5.  Some upstream improvements that will
	be in that import include:</p>

      <ul>
	<li>Ability to specify a count to thread step-*
	  operations.</li>

	<li>Ongoing AArch64 development.</li>

	<li>Significant progress on the lldb-gdbserver debug
	  stub.</li>

	<li>I/O handling improvements.</li>

	<li>A much faster C++ name demangler for most symbols.</li>
      </ul>

      <p>A proof-of-concept implementation of kernel debugging support
	for amd64 was completed as part of Google Summer of Code.  It
	is not ready to be committed, but will form the basis for
	upcoming kernel debugging support.</p>
    </body>

    <sponsor>DARPA/AFRL</sponsor>

    <sponsor>SRI International</sponsor>

    <sponsor>University of Cambridge</sponsor>

    <help>
      <task>
	<p>Port remote debug stub (lldb-gdbserver) from Linux to
	&os;.</p>
      </task>

      <task>
	<p>Add support for local and core file kernel debugging.</p>
      </task>

      <task>
	<p>Implement, fix or test support on all non-amd64
	  architectures.</p>
      </task>

      <task>
	<p>Verify cross-debugging.</p>
      </task>

      <task>
	<p>Investigate and fix test suite failures.</p>
      </task>

      <task>
	<p>Package LLDB as a port.</p>
      </task>

      <task>
	<p>Enable by default in the base system for working
	  architectures.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Updated <tt>vt(4)</tt> System Console</title>

    <contact>
      <person>
	<name>
	  <given>Aleksandr</given>
	  <common>Rybalko</common>
	</name>
	<email>ray@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Schouten</common>
	</name>
	<email>ed@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Jean-S&eacute;bastien</given>
	  <common>P&eacute;dron</common>
	</name>
	<email>dumbbell@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Newcons">Project wiki page</url>
    </links>

    <body>
      <p>The <tt>vt(4)</tt> (aka <tt>Newcons</tt>) project provides
	a replacement for the legacy <tt>syscons</tt> system console.
	It brings a number of improvements, including better
	integration with graphics modes and broader character set
	support.</p>

      <p>A large number of improvements were committed to
	<tt>vt(4)</tt> over the last three months.
	Jean-S&eacute;bastien P&eacute;dron fixed significant
	performance regressions observed with <tt>vt_vga</tt>,
	particularly noticeable on virtual machines.  Stefan Esser
	converted and cleaned up all of the keyboard map files for use
	with <tt>vt(4)</tt>.</p>

      <p>The EFI framebuffer driver and the ofwfb driver now work
	with the xf86-video-scfb X11 video driver, supporting
	native-resolution (albeit unaccelerated) X.</p>

      <p>The fixes and improvements have all been merged and will be
	available in the upcoming &os; 10.1 release.</p>
    </body>

    <help>
      <task>
	<p>Implement the remaining features supported by
	  <tt>vidcontrol(1)</tt>.</p>
      </task>

      <task>
	<p>Write manual pages for <tt>vt(4)</tt> drivers and kernel
	  interfaces.</p>
      </task>

      <task>
	<p>Support direct handling of keyboards by the <tt>kbd</tt>
	  device (without <tt>kbdmux(4)</tt>).</p>
      </task>

      <task>
	<p>CJK fonts.  This is in progress.</p>
      </task>

      <task>
	<p>Switch to <tt>vt(4)</tt> by default.</p>
      </task>

      <task>
	<p>Implement compatibility mode to be able to use single-byte
	  charsets/key-codes in <tt>vt(4)</tt>.</p>
      </task>
    </help>
  </project>

  <project cat='kern'>
    <title>Intel GPU Driver Update</title>

    <contact>
      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>
	<email>kib@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://lists.freebsd.org/pipermail/freebsd-current/2014-October/052532.html">Email thread with patch updates and regression test reports.</url>
    </links>

    <body>
      <p>The project to update the Intel graphics chipset driver
	(i915kms) to a recent snapshot of the Linux upstream code
	continues.  A patch with a large chunk of updates has been
	made available to test for regressions against current
	functionality, but is not yet expected to provide working new
	functions. The GEM I/O ioctl code path has been modified to
	more closely resemble the Linux code structure (easing future
	imports).</p>
    </body>

    <sponsor>
      &os; Foundation
    </sponsor>

    <help>
      <task>
	<p>Fix any bugs reported against the latest versions of the patch.</p>
      </task>

      <task>
	<p>Make Haswell graphics work with Mesa.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Debian GNU/kFreeBSD</title>

    <contact>
      <person>
	<name>Debian GNU/kFreeBSD Maintainers</name>
	<email>debian-bsd@lists.debian.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.debian.org/Debian_GNU/kFreeBSD">Debian GNU/kFreeBSD on the Debian Wiki</url>
      <url href="https://www.debian.org/ports/kfreebsd-gnu/" />
    </links>

    <body>
      <p>Debian GNU/kFreeBSD is a software distribution produced by
	Debian, based on the kernel of &os; (instead of Linux) and GNU
	libc.  Around 90% of Debian's software archive has now been
	ported to it, for amd64 and i386 architectures.  It was first
	released with Debian "squeeze" as a development preview in
	2011, featured again in the "wheezy" release, and hopes to be
	part of the official Debian "jessie" release in early 2015.</p>

      <p>In 2003 there were several attempts to bootstrap a minimal
	Debian system upon &os; or NetBSD kernels, some also trying to
	use the native BSD libc.  The most successful and
	longest-lived of these was a "GNU/FreeBSD" chroot bootstrapped
	by Robert Millan with the GNU libc that most of Debian's core
	packages were designed to work with.  The "k" was later added
	to the name to reflect that it takes just the kernel from
	&os;, with most everything else from the Debian archive.  We
	do also package some &os; utilities as needed to boot it
	and take advantage of certain features.</p>

      <p>&os; support within GNU libc is now mostly maintained by Petr
	Salinger, who recently converted it from an older threading
	implementation based on LinuxThreads to NPTL, which is much
	more compatible with the software we run.  We have the GNU
	compiler toolchain as well as Clang 3.4; Perl, Python and
	Ruby; and OpenJDK 7, based the on work done in &os;'s own
	ports collection.  We use linprocfs for <tt>/proc</tt> because
	much of Debian GNU software expects this.  The Linuxulator
	is not needed at all, but could make for interesting future
	uses.  Porting work mostly focuses now on individual packages'
	build systems, on preprocessor #ifdefs that do not clearly
	distinguish between kernel and libc, or fixing testsuites'
	presumptions of Linux-specific behaviour.  In the course of
	this, we even found the odd &os; kernel bug, including
	EN-14:06 / CVE-2014-3880.</p>

      <p>GNU/kFreeBSD has already seen production use, mostly on
	webservers, email servers and file servers; one such machine
	has 475 days' uptime receiving around 10,000 emails per day.
	It has become increasingly practical for desktop/laptop uses
	thanks largely to new features coming in from &os; 10.1.</p>

      <p>KMS graphics mean that 3D gaming and high-definition video
	playback perform brilliantly.  We have great support for Intel
	graphics chipsets, but only an older nvidia Xorg driver.  For
	radeonkms, Robert Millan was able to add firmware-loading
	support so that non-free binary blobs can be packaged
	separately, outside of Debian's main archive.  Proprietary
	drivers are not useful to us as they would need to be rebuilt
	from source to port them.</p>

      <p><tt>vt(4)</tt> was necessary for KMS to not break VT
	switching.  But it has also improved the console's handling of
	non-ASCII character sets and we do look forward to having
	console fonts for non-Latin scripts.</p>

      <p>We have supported ZFS for some time, even as a root/boot
	filesystem (using GRUB 2; Robert Millan added the ZFS support
	which now &os; itself is able to benefit from).  Enhancements
	coming from OpenZFS, especially LZ4 compression, in
	combination with better memory management and GEOM
	improvements, mean that "jessie" should see a noticeable
	performance boost.</p>

      <p>debian-installer already allows for pre-seeded, unattended
	installs and there are PXE-bootable install images
	available.</p>

      <p>virtio drivers are new to the "jessie" release, enabling
	support for some public clouds.  We are now compiling Xen domU
	and PVHVM support into our standard kernel builds.</p>

      <p>We already have userland tools to configure the PF firewall.
	As an experiment, we are compiling in IPSEC support by
	default for the upcoming release, and would like to see it put
	to good use against present-day privacy and security
	threats.</p>

      <p>We try to support the use of Debian GNU/kFreeBSD inside a jail
	on a &os; host system, and hopefully vice-versa.  Some of the
	jail utilities are not yet packaged, but we have documentation
	on the Debian Wiki on how to set up jails on "wheezy", which
	are fully functional.</p>

      <p>The init system we currently use is a parallel System V-style
	init, although Debian GNU/Linux will be switching away from
	that to systemd.  For the next release we may switch to
	OpenRC, which is mostly ported already.</p>

      <p>Not having systemd or udev means that we will be unable to
	support GNOME 3.14 in the upcoming release.  We have very good
	support for XFCE, also have KDE, LXDE and the
	recently-packaged MATE desktop environment.  The Debian
	software archive provides many alternative window managers for
	Xorg such as IceWM, dozens of terminal emulators, and so
	on.</p>

      <p>As we approach the freeze of the Debian "jessie" release,
	we would love for anyone to test GNU/kFreeBSD, try to use it
	for whatever would be useful to you, and let us know what
	issues you run into.  Ask for help on our project mailing list
	or IRC channel, and let us know of any bugs you find.  We
	still have time to fix problems before release, and we would
	be happy to improve our documentation at any time.</p>
    </body>
  </project>

  <project cat='proj'>
    <title>VMWare VAAI and Microsoft ODX Acceleration in CTL</title>

    <contact>
      <person>
	<name>
	  <given>Alexander</given>
	  <common>Motin</common>
	</name>
	<email>mav@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The CAM Target Layer (CTL), used as base for the kernel iSCSI
	server, got support for VMWare VAAI and Microsoft ODX
	storage acceleration.  It permits avoiding network
	bottlenecks and improves storage efficiency on sets of large
	operations, such as virtual machine (or large file) creation,
	initialization to zeros, copy, delete, etc..</p>

      <p>VMWare VAAI includes support for these primitives/SCSI
	commands: Atomic Test and Set (ATS) &mdash; COMPARE AND
	WRITE command; Extended Copy (Clone) &mdash; SPC-3 subset
	of XCOPY commands; Write Same (Zero) &mdash; set of WRITE
	SAME commands; and Dead Space Reclamation (Delete) &mdash; UNMAP
	command.</p>

      <p>Microsoft ODX includes support for these SCSI commands:
	POPULATE TOKEN/WRITE USING TOKEN (SPC-4 extensions of
	XCOPY), WRITE SAME and UNMAP.</p>

      <p>All XCOPY operations are currently limited to one storage
	host.  ODX operations are currently limited only to iSCSI
	disks.  Accelerated inter-host copying or copying to/from
	files on Samba shares is not implemented and is handled by
	initiators in the legacy way.</p>

      <p>The code is committed to &os; head and stable/10 branches,
	and will be present in &os; 10.1 and FreeNAS 9.2.1.8 /
	9.3 releases.</p>
    </body>

    <sponsor>
      iXsystems, Inc.
    </sponsor>

    <help>
      <task>
	<p>Full support for thin provisioning, including capacity
	  usage reporting and threshold notifications.</p>
      </task>

      <task>
	<p>Inter-host XCOPY operations.</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>amd64 Xen Paravirtualization</title>

    <contact>
      <person>
	<name>
	  <given>Cherry</given>
	  <common>Mathew</common>
	</name>
	<email>cherry@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/FreeBSD/Xen">FreeBSD/Xen paravirtualised kernel support.</url>
    </links>

    <body>
      <p>This project aims to add support to the &os; kernel for
	running in Xen Paravirtualised mode on amd64 systems.  This
	project has finally reached a "Proof of Concept" stage on the
	branch
	<url href="http://svnweb.freebsd.org/base/projects/amd64_xen_pv/">projects/amd64_xen_pv</url>.</p>

      <p>Testing and bug reports on various configurations is
	encouraged!  The author is also seeking bounties to help
	complete the effort and assess potential interest.  Please
	send email if interested.</p>

      <p>PV kernels are still supported by most cloud providers for a
	range of configurations, although they are expected to be
	phased out in the future.</p>
    </body>

    <sponsor>
	Spectralogic Corporation (2012-2013)
    </sponsor>

    <help>
      <task>
	<p>Large page support</p>
      </task>

      <task>
	<p>SMP support</p>
      </task>

      <task>
	<p>Debug and cleanup</p>
      </task>

      <task>
	<p>Security vetting</p>
      </task>

      <task>
	<p>Performance tweaks</p>
      </task>
    </help>
  </project>

  <project cat='proj'>
    <title>Address Space Layout Randomization (ASLR)</title>

    <contact>
      <person>
	<name>
	  <given>Shawn</given>
	  <common>Webb</common>
	</name>

	<email>shawn.webb@hardenedbsd.org</email>
      </person>
      <person>
	<name>
	  <given>Oliver</given>
	  <common>Pinter</common>
	</name>

	<email>oliver.pinter@hardenedbsd.org</email>
      </person>
    </contact>

    <links>
      <url href="http://hardenedbsd.org/">The HardenedBSD Project</url>
      <url href="https://reviews.freebsd.org/D473">ASLR review on Phabricator</url>
      <url href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=193940">EXP-RUN test results</url>
      <url href="https://wiki.freebsd.org/201409DevSummit/ASLR">EuroBSDCon 2014 Devsummit page on ASLR</url>
      <url href="https://wiki.freebsd.org/AddressSpaceLayoutRandomization"> FreeBSD wiki page on ASLR</url>
    </links>

    <body>
      <p>Address Space Layout Randomization (ASLR) is a computer
	security technique that aids in mitigating low-level
	vulnerabilities such as buffer overflows.  ASLR randomizes the
	memory layout of running applications, to prevent an attacker
	from knowing where a given exploitable vulnerability lies in
	memory.</p>

      <p>A lot has happened in the last few months.  Shawn Webb gave
	presentations at both BSDCan 2014 and EuroBSDCon 2014. The
	presentations were met with a lot of support and backing.
	At the end of EuroBSDCon Ilya Bakulin fixed the known bug with
	ASLR on ARM systems.
	Shawn Webb and Oliver Pinter have submitted our patch to
	the Phabricator code review system.  Shawn Webb added
	an API for allowing a debugger to disable ASLR to
	support deterministic debugging.  Oliver Pinter enhanced the
	performance of our ASLR implementation.  A package building
	exp-run was ran and came out favorably in terms of
	performance.  Shawn Webb bumped up the maximum number of bits
	allowed to be randomized to 20 and set the default to 14.</p>

      <p>Shawn Webb and Oliver Pinter founded The HardenedBSD project
	to serve as a staging area for their work on security-related
	projects for &os;.</p>
    </body>

    <sponsor>SoldierX</sponsor>

    <help>
      <task>
	<p>Get more people testing and reviewing our patch</p>
      </task>

      <task>
	<p>Run more performance tests</p>
      </task>

      <task>
	<p>Figure out why the two ports failed in the EXP-RUN.
	  Involve the port maintainers.</p>
      </task>

      <task>
	<p>Test on different architectures (we need help with
	  this)</p>
      </task>
    </help>
  </project>

  <project cat='doc'>
    <title>Handbook <tt>ezjail</tt> Section</title>

    <contact>
      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/jails-ezjail.html">Managing Jails with <tt>ezjail</tt></url>
    </links>

    <body>
      <p><tt>ezjail</tt> is a very popular jails management utility,
	but was only mentioned in passing in the Handbook.  This new
	section describes basic setup and usage.  An in-depth example
	shows how to create and configure a jail.  It also serves as
	an example of how to run a simple caching-only BIND in a
	jail.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>
	  <given>&os;</given>
	  <common>Release Engineering Team</common>
	</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/releases/10.1R/schedule.html">&os;&nbsp;10.1-RELEASE schedule</url>
      <url href="http://ftp.freebsd.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os; development snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes and maintaining the
	respective branches, among other things.</p>

      <p>In mid-July, &os;&nbsp;9.3-RELEASE was released without delay
	in release cycle.</p>

      <p>In late August, the &os;&nbsp;10.1-RELEASE cycle began, and as of
	this writing, is expected to stay on schedule.</p>

      <p>Work to produce virtual machine images as part
	of the release cycle has continued,
	supporting various cloud services such
	as Microsoft Azure, Amazon EC2, and Google Compute Engine.</p>
    </body>

    <sponsor>
	The &os; Foundation
    </sponsor>
  </project>

  <project cat='misc'>
    <title>The &os; Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSDFoundation.org/"/>
      <url href="http://freebsdjournal.com/">&os; Journal</url>
    </links>

    <body>
      <p>The &os; Foundation is a 501(c)(3) non-profit organization
	dedicated to supporting and promoting the &os;&nbsp;Project
	and community worldwide.  Most of the funding is used to
	support &os; development projects, conferences, and developer
	summits, purchase equipment to grow and improve the &os;
	infrastructure, and provide legal support for the Project.</p>

      <p>We published our fourth issue of the FreeBSD Journal.  We
	have over 4500 subscriptions to date.  Work continued on
	adding support for the Dynamic Edition which will be available
	soon.  The fifth issue is also due out soon.</p>

      <p>Foundation staff member Konstantin Belousov wrapped up the
	PostgreSQL performance investigation project.  Kostik reran
	the benchmarks as a configuration error may have affected
	earlier results.  Improvements arising from the investigation
	are merged to the &os; 10 development branch and will be in
	the 10.1 release.  Kostik also committed a variety of virtual
	memory and file system bug fixes and improvements.</p>

      <p>Over the quarter, Foundation staff member Edward Napierała
	refined the new autofs-based automounter and incorporated
	feedback from testers in enterprise and university contexts.
	The automounter is available in the development branch of
	FreeBSD and will be included in FreeBSD 10.1.  Edward also
	supported engineers at Chelsio in preparing iSCSI offload
	support for Chelsio's 10- and 40-gigabit per second Ethernet
	adapters.</p>

      <p>Ed Maste, our project manager, tested and integrated UEFI
	system boot and new vt(4) console work into the release branch
	for the upcoming FreeBSD 10.1 release.  He committed a number
	of small toolchain and build infrastructure improvements.  He
	also wrote an article on LLDB for the FreeBSD Journal and
	presented the LLDB work at EuroBSDCon.</p>

      <p>&os; Foundation Systems Administrator and Release Engineer
	Glen Barber continued work on finalizing the 9.3-RELEASE
	process, followed by starting the 10.1-RELEASE process.</p>

      <p>Work has continued on producing regularly-updated &os;
	development snapshot builds for the various supported
	architectures, which include amd64, i386, ia64, powerpc,
	powerpc64, sparc64, and arm.</p>

      <p>In addition, work has been committed to a project branch
	which allows &os; virtual machine disk images to be produced
	by default as part of the release process.</p>

      <p>A plan has been put together for the upcoming Secure Boot work.</p>

      <p>More hardware has been purchased to support &os; infrastructure at NYI
	and Sentex.</p>

      <p>We announced a collaboration between the Foundation and Cavium to
	deliver a &os; ARMv8 based implementation.</p>

      <p>We signed a license agreement with Oracle to get access to the
	TCKs for Java 7 and 8.</p>

      <p>Robert Watson ran and organized the Cambridge Developer
	Summit.  We provided a travel grant to a Google Summer of Code
	student to attend the summit.</p>

      <p>We provided a travel grant to a developer who organized and ran
	BSDDay in Argentina.</p>

      <p>We were a Gold Sponsor for EuroBSDCon 2014 and sponsored the
	Developer Summit.  We provided 4 travel grants to assist &os;
	contributors with their travel expenses to attend the
	conference.  We also had 6 board/staff members attend the
	conference and some gave talks, tutorials, and chaired some
	sessions.  We held our Fall Fundraising campaign there and
	raised over $2,000 in donations from attendees.</p>

      <p>We organized the Silicon Valley Vendor/Developer Summit that is
	happening November 3 and 4.</p>

      <p>Kirk McKusick, Robert Watson, and George Neville-Neil
	published the second edition of "The Design and Implementation
	of the FreeBSD Operating System."</p>

      <p>Kirk McKusick presented a 2-day tutorial on the &os; kernel
	and gave a talk on the implementation of ZFS at EuroBSDCon.</p>

      <p>Dru Lavigne attended Fossetcon: September 11-13
	(fossetcon.org).</p>

      <p>We created new recruiting fliers for upcoming events,
	including the Grace Hopper conference.</p>

      <p>We started sending out Foundation monthly update emails to keep
	the &os; community informed on some of the activities we did
	the previous month to support &os;.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Cluster Administration Team</title>

    <contact>
      <person>
	<name>&os; Cluster Administration Team</name>
	<!-- email intentionally left incomplete -->
	<email>clusteradm@</email>
      </person>
    </contact>

    <body>
      <p>The &os; Cluster Administration Team consists of the people
	responsible for administering the machines that the project
	relies on for its distributed work and communications to be
	synchronised.  In this quarter, the team has worked on:</p>

      <ul>
	<li>Implemented a central, &os;&nbsp;cluster-specific package
	  building node using <tt>ports-mgmt/poudriere-devel</tt>,
	  providing a single consistent set of third-party binary
	  packages throughout the &os;&nbsp;cluster from a common,
	  known-working configuration.</li>

	<li>Converted all machines running in the &os; cluster from
	  individual (and sometimes different) userland and kernel
	  configurations to a single configuration for the base
	  system.  This enabled the implementation of
	  a &os;.org-specific binary update mechanism currently
	  deployed throughout the cluster.</li>
      </ul>
    </body>

    <sponsor>
	The &os; Foundation
    </sponsor>
  </project>
</report>

<?xml version="1.0" encoding="euc-jp"?>
<!DOCTYPE html PUBLIC "-//FreeBSD//DTD XHTML 1.0 Transitional-Based Extension//EN"
"http://www.FreeBSD.org/XML/share/xml/xhtml10-freebsd.dtd" [
<!ENTITY title "FreeBSD の先進的な技術について">
]>
<!-- $FreeBSD$ -->
<!-- The FreeBSD Japanese Documentation Project -->
<!-- Original revision: r48092 -->

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
      <title>&title;</title>

      <cvs:keyword xmlns:cvs="http://www.FreeBSD.org/XML/CVS">$FreeBSD$</cvs:keyword>
    </head>

    <body class="navinclude.about">

    <h1>先進的な機能を数多く提供する &os;</h1>

    <p>使うアプリケーションがどんなものでも、
      オペレーティングシステムは利用可能なすべての資源を利用すべきです。
      &os; の性能、ネットワーク、容易にシステム管理可能なストレージ、
      および包括的な文書は、
      いかなるコンピュータのポテンシャルをすべて引き出すことを可能にします。</p>

    <h2>4.4BSD ベースの完全なオペレーティングシステム</h2>

    <p>&os; は、
      カリフォルニア大学バークレー校のコンピュータシステムリサーチグループから公開された
      <b>BSD</b> ソフトウェアに由来しています。
      20 年以上にも渡る &os; の開発により、
      業界をリードするスケーラビリティ、
      ネットワーク性能の改良、管理ツール、ファイルシステム、
      およびセキュリティ機能が加えられました。
      その結果、
      &os; はインターネット上のいたる所で利用されるようになりました。
      コアルーター製品のオペレーティングシステム、
      ルートネームサーバでの採用、メジャーなウェブサイトのホスティング、そして、
      広く使われているデスクトップオペレーティングシステムの基盤としても採用されています。
      これは、世界各国から集まった多様なボランティア開発者からなる
      &os; プロジェクトだからこそ可能になったことです。</p>

      <p><b>&os;&nbsp;10.X</b> では、新しい機能が導入され、
	古いツールの多くが新しいバージョンに置き換えられました。</p>

      <ul>
	<li><b>bhyve</b>:
	  新しい BSD ライセンスの最新のハイパーバイザが &os;
	  のベースシステムにインポートされました。
	  現在のサポートされているすべての &os; のバージョン、
	  また grub-bhyve port により
	  OpenBSD および Linux を動作できます。</li>

	<li><b>KMS および新しい drm2 ビデオドライバ</b>:
	  新しい drm2 ドライバは、Radeon HD 6000 シリーズまでの AMD GPU および
	  Radeon HD 7000 ファミリへの部分的なサポートを提供します。
	  &os; は、AMD および Intel GPU への
	  Kernel Mode Setting に対応しています。</li>

	<li><b>Capsicum がデフォルトで有効になりました。</b>:
	  Capsicum は、デフォルトカーネルで有効に設定されるようになりました。
	  これにより、以下のような "ケーパビリティモード"
	  で動作するプログラムのサンドブックス化が可能になりました。
	  <ul>
	    <li>tcpdump</li>
	    <li>dhclient</li>
	    <li>hast</li>
	    <li>rwhod</li>
	    <li>kdump</li>
	  </ul>
	</li>

	<li><b>新しいバイナリ Package システム</b>:
	  &os; は、package 管理システムを大きく改良した
	  pkg を現在使用しています。
	  このシステムは、複数のリポジトリ、署名のある package、そして、
	  安全なアップグレードに対応しています。
	  この改良されたシステムは、
	  すべてのプラットフォームに対する頻繁に構築が行われている公式の
	  package とともに、
	  ports ツリーの新しい安定ブランチ
	  (より長い期間のサポートを目的としたブランチ)
	  と結びついています。</li>

	<li><b>Unmapped I/O</b>:
	  新しく実装された unmapped VMIO バッファのコンセプトは、
	  バッファを作成したり再利用するためのコストのかかる
	  TLB のシャットダウンの必要性を排除し、
	  激しい I/O ロードが行われるような大きな SMP コンピュータにおいて、
	  システムの CPU 時間を最大 25-30% を減らすことができます。</li>
      </ul>

      <p><b>&os;&nbsp;9.X</b> では、
	デスクトップおよびセキュリティのサポートに焦点が当てられ、
	新しい機能やパフォーマンスの強化が行われました。</p>

      <ul>
	<li><b>OpenZFS</b>:
	  &os; 9.2 から OpenZFS v5000 (Feature Flags) に対応しました。
	  これには以下の feature flag が含まれています。
	  <ul>
	    <li>async_destroy</li>
	    <li>empty_bpobj</li>
	    <li>lz4_compress</li>
	  </ul>
	  これにより、バックグラウンドで ZFS destroy の実行が可能になったり、
	  スナップショットが消費するディスク容量を減らしたり、
	  より良い圧縮アルゴリズムを使ってデータセットを圧縮できるようになりました。</li>

	<li><b>Capsicum ケーパビリティモード</b>:
	  Capsicum は、
	  ケーパビリティモデルを用いるサンドボックス対応のための機能のセットです。
	  ここでケーパビリティはファイルディスクリプタです。
	  CAPABILITIES および CAPABILITY_MODE の
	  2 つの新しいカーネルオプションが、
	  GENERIC カーネルに追加されました。</li>

	<li><b>Hhook</b>: (Helper Hook) および khelp(9) (Kernel Helpers)
	  KPI が実装されました。
	  カーネルにおけるより一般的な使用に対する pfil(9)
	  フレームワークのスーパーセットが用意されています。
	  hhook(9) KPI は、
	  カーネルサブシステムがフックポイントをエクスポートする方法を提供します。
	  このフックポイントで
	  khelp(9) モジュールは、カーネルを拡張したり新しい機能をフックできます。
	  khelp(9) KPI は、khelp (9) モジュールを管理するフレームワークを提供します。
	  khelp(9) モジュールは、間接的に hhook(9) KPI を使って、
	  フック関数をカーネル内の目的のフックポイントに登録します。
	  これらにより、ABI を保存する形で、
	  実行時にカーネルを動的に拡張する構造化された方法を可能にします。</li>

	<li><b>Accounting API</b> が実装されました。これにより、
	  プロセス毎、jail 毎、そして、
	  ログインクラス毎にリソース使用量の情報を保持できます。
	  この機能は、デフォルトでは構築もインストールもされません。
	  この機能を構築してインストールするには、
	  カーネルコンフィグレーションファイルで
	  RACCT オプションを指定し、&os; ハンドブックに記載されている方法で、
	  ベースシステムを再構築してください。</li>

	<li><b>Resource-limiting API</b> が実装されました。
	  これは RACCT リソース使用量の実装と合わせて動作し、
	  ルールのセットおよび現在のリソースの使用量をベースにユーザが設定可能な
	  action を定義します。
	  rctl(8) ユーティリティが追加され、
	  ユーザランドでルールを管理できます。
	  デフォルトでは、この機能の構築、インストールはされません。</li>

	<li><b>USB</b> サブシステムは、USB パケットフィルタに対応しました。
	  これにより、各 USB ホストを経由するパケットをキャプチャできます。
	  パケットフィルタの構造は、bpf と類似しています。
	  ユーザランドプログラムの usbdump(8) が追加されました。</li>

	<li><b>インフィニバンドへの対応</b>: OFED (OpenFabrics Enterprise
	  Distribution) バージョン 1.5.3
	  がベースシステムにインポートされました。</li>

	<li><b>TCP/IP network</b> スタックは、現在プラグイン可能な mod_cc(9)
	  輻輳制御フレームワークに対応しています。
	  これにより TCP
	  輻輳制御アルゴリズムを動的にロード可能なカーネルモジュールとして実装できます。
	  次のような多くのカーネルモジュールが利用可能です。
	  CAIA-Hamilton-Delay アルゴリズムのための cc_chd(4)、 
	  CUBIC アルゴリズムのための cc_cubic(4)、
	  Hamilton-Delay アルゴリズムのための cc_hd(4)、
	  H-TCP アルゴリズムのための cc_htcp(4)、
	  NewReno アルゴリズムのための cc_newreno(4)、
	  そして Vegas アルゴリズムのための cc_vegas(4)。
	  デフォルトのアルゴリズムは、
	  新しい sysctl(8) 変数の
	  net.inet.tcp.cc.algorithm で設定可能です。</li>
 
	<li><b>SU+J</b>: &os; の Fast File System は、
	  soft updates ジャーナル機能に対応しています。
	  soft updates を有効にしたファイルシステムにログを導入することで、
	  意図せずにシャットダウンした場合でも、
	  バックグラウンド fsck(8) の必要はなくなります。</li>
      </ul>

      <p>&os; は他にも素晴らしい機能を持っています。</p>

      <ul>
	<li><b>Firewalls:</b>
	  ベースシステムには、SMP
	  のパフォーマンスが改善された改良版の PF
	  とともに IPFW および IPFilter が用意されています。
	  IPFW には dummynet も実装されており、
	  ネットワーク管理者は、遅延、ジッタ、
	  パケットロスおよびバンド幅の制限といった、
	  条件の悪いネットワーク条件をシミュレートできます。</li>

	<li><b>Jails</b> は軽量な仮想化の代替です。
	  プロセスがアクセスできるファイルシステムの名前空間を制限し、
	  その名前空間に割り当てられたネットワークアドレスに制限します。
	  Jails は階層構造が可能で、jail の中に jail
	  を構成することが可能です。</li>

	<li><b>Linux emulation</b> は、
	  Linux バイナリを変更なしに &os;
	  システム上で実行できるように、
	  システムコールの変換レイヤを提供します。</li>

	<li><b>DTrace</b>
	  は、カーネルおよびアプリケーションのパフォーマンスに関する問題を、
	  ロードされて実行中であっても、
	  トレースしてトラブルシューティングするための包括的なフレームワークを提供します。</li>

	<li><b>Ports Collection</b> は、
	  &os; に簡単にインストールして実行可能な、
	  23,000 を越えるサードパーティ製アプリケーションのセットです。
	  ports のアーキテクチャでは、
	  数多くのアプリケーションでコンパイル時オプションを簡単にカスタマイズできます。</li>

	<li><b>Network Virtualization:</b> コンテナ ("vimage")
	  が実装されました。
	  これは、&os;
	  カーネルを複数の独立したネットワーク状態を管理できるように拡張します。
	  Vimage では、
	  完全な仮想化されたネットワークトポロジを独立に作成することができ、
	  jail(8) は直接的に完全に仮想化されたネットワークスタックを利用できます。</li>
      </ul>
  </body>
</html>
